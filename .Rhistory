install.packages ("tidyverse")
library (tidyverse)
install.packages ("openxlsx")
library (openxlsx)
install.packages("here")
library(here)
BRFSS2022 <- here("rawdata", "BRFSS2022.xlsx")
BRFSS2022 <- read.xlsx(BRFSS2022)
BRFSS2021 <- here("rawdata", "BRFSS2021.xlsx")
BRFSS2021 <- read.xlsx(BRFSS2021)
BRFSS2020 <- here("rawdata", "BRFSS2020.xlsx")
BRFSS2020 <- read.xlsx(BRFSS2020)
BRFSS2019 <- here("rawdata", "BRFSS2019.xlsx")
BRFSS2019 <- read.xlsx(BRFSS2019)
BRFSS2018 <- here("rawdata", "BRFSS2018.xlsx")
BRFSS2018 <- read.xlsx(BRFSS2018)

head(BRFSS2022)
install.packages ("dyplr")
library(dplyr)
dataset_names <- c("BRFSS2022", "BRFSS2021", "BRFSS2020", "BRFSS2019", "BRFSS2018")
state_mapping <- c(
"1" = "Alabama", "2" = "Alaska", "4" = "Arizona", "5" = "Arkansas", "6" = "California",
"8" = "Colorado", "9" = "Connecticut", "10" = "Delaware", "11" = "District of Columbia", "12" = "Florida",
"13" = "Georgia", "15" = "Hawaii", "16" = "Idaho", "17" = "Illinois", "18" = "Indiana", "19" = "Iowa",
"20" = "Kansas", "21" = "Kentucky", "22" = "Louisiana", "23" = "Maine", "24" = "Maryland", "25" = "Massachusetts",
"26" = "Michigan", "27" = "Minnesota", "28" = "Mississippi", "29" = "Missouri", "30" = "Montana", "31" = "Nebraska",
"32" = "Nevada", "33" = "New Hampshire", "34" = "New Jersey", "35" = "New Mexico", "36" = "New York", "37" = "North Carolina",
"38" = "North Dakota", "39" = "Ohio", "40" = "Oklahoma", "41" = "Oregon", "42" = "Pennsylvania", "44" = "Rhode Island",
"45" = "South Carolina", "46" = "South Dakota", "47" = "Tennessee", "48" = "Texas", "49" = "Utah", "50" = "Vermont",
"51" = "Virginia", "53" = "Washington", "54" = "West Virginia", "55" = "Wisconsin", "56" = "Wyoming",
"66" = "Guam", "72" = "Puerto Rico", "78" = "Virgin Islands"
)
update_values <- function(dataset) {
dataset <- dataset %>%
mutate(X_STATE = ifelse(X_STATE %in% names(state_mapping), state_mapping[as.character(X_STATE)], X_STATE))
return(dataset)
}
for (name in dataset_names) {
if (exists(name)) {
dataset <- get(name)
modified_dataset <- update_values(dataset)
assign(name, modified_dataset, envir = .GlobalEnv)
message(paste("Dataset", name, "updated successfully."))
} else {
message(paste("Dataset", name, "not found. Skipping..."))
}
}
flushot_table <- select(BRFSS2022, X_STATE, FLUSHOT7)
View(flushot_table)
flushot_table$FLUSHOT7[flushot_table$FLUSHOT7 == "1"] <- "Yes"
flushot_table$FLUSHOT7[flushot_table$FLUSHOT7 == "2"] <- "No"
flushot_table$FLUSHOT7[flushot_table$FLUSHOT7 == "1"] <- "Yes"
flushot_table$FLUSHOT7[flushot_table$FLUSHOT7 == "7"] <- "Unsure"
flushot_table$FLUSHOT7[flushot_table$FLUSHOT7 == "9"] <- "Refused"
View(flushot_table)
library(dplyr)
library(tidyr)
selected_states <- c(
"Alabama", "Alaska", "Arizona", "Arkansas", "California",
"Colorado", "Connecticut", "Delaware", "District of Columbia", "Florida",
"Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa",
"Kansas", "Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts",
"Michigan", "Minnesota", "Mississippi", "Missouri", "Montana", "Nebraska",
"Nevada", "New Hampshire", "New Jersey", "New Mexico", "New York", "North Carolina",
"North Dakota", "Ohio", "Oklahoma", "Oregon", "Pennsylvania", "Rhode Island",
"South Carolina", "South Dakota", "Tennessee", "Texas", "Utah", "Vermont",
"Virginia", "Washington", "West Virginia", "Wisconsin", "Wyoming",
"Guam", "Puerto Rico", "Virgin Islands"
)
subset_data <- flushot_table[flushot_table$X_STATE %in% selected_states, ]
flushot_frequency <- subset_data %>%
group_by(X_STATE, FLUSHOT7) %>%
summarise(frequency = n()) %>%
pivot_wider(names_from = FLUSHOT7, values_from = frequency, values_fill = list(frequency = 0))
View(flushot_frequency)
rows_to_sum <- c("No", "Refused", "Unsure", "Yes", "NA")
View(flushot_frequency)
flushot_frequency$X_STATE <- tolower(flushot_frequency$X_STATE)
flushot_frequency$region <- flushot_frequency$X_STATE
flushot_frequency$X_STATE <- NULL
View(merged_data)
flushot_frequency <- flushot_frequency %>%
mutate(total = rowSums(select(., c("No", "Refused", "Unsure", "Yes", "NA")), na.rm = TRUE))
View(flushot_frequency)
flushot_frequency <- flushot_frequency %>%
mutate(flu_shot_rate_by_100 = (Yes / total) * 100)
columns_to_remove <- c("Yes", "No", "Unsure", "NA", "Refused")
merged_data <- merged_data %>%
select(-any_of(columns_to_remove))
library(maps)
map("state")
library(ggplot2)
library(viridis)
p <- ggplot(merged_data, aes(x = longitude, y = latitude, group = group, fill = flu_shot_rate_by_100,
text = paste("Region: ", region, "<br>",
"Flu Shot Rate: ", round(flu_shot_rate_by_100, 2), " per 100 people"))) +
geom_polygon(color = "black") +
scale_fill_viridis(name = "Flu Shot Rate (per 100)", option = "viridis") +
labs(title = "Adult Flu Shot Rate - 2022", fill = "Flu Shot Rate") +
theme_minimal() +
theme(plot.title = element_text(size = 12, face = "bold"),
legend.title = element_text(size = 10),
legend.text = element_text(size = 8),
legend.position = "bottom")
p <- plotly::ggplotly(p, tooltip = "text")
print(p)
PSAdf2022 <- select(BRFSS2022, PSATEST1, PCSTALK1)
PSAdf2021 <- select(BRFSS2021, PSATEST1, PCSTALK)
PSAdf2020 <- select(BRFSS2020, PSATEST1, PCPSAAD3, PCPSADI1)
PSAdf2018 <- select(BRFSS2018, PSATEST1, PCPSAAD3, PCPSADI1)
filtered_PSAdf2022 <- PSAdf2022[!(is.na(PSAdf2022$PSATEST1) & is.na(PSAdf2022$PCSTALK)), ]
filtered_PSAdf2021 <- PSAdf2021[!(is.na(PSAdf2021$PSATEST1) & is.na(PSAdf2021$PCSTALK)), ]
filtered_PSAdf2020 <- subset(PSAdf2020, !(is.na(PSATEST1) & is.na(PCPSAAD3) & is.na(PCPSADI1)))
filtered_PSAdf2018 <- subset(PSAdf2018, !(is.na(PSATEST1) & is.na(PCPSAAD3) & is.na(PCPSADI1)))
convert_PSATEST1 <- function(data) {
data <- mutate(data, PSATEST1 = case_when(
PSATEST1 == 1 ~ "Yes",
PSATEST1 == 2 ~ "No",
PSATEST1 == 7 ~ "Unsure",
PSATEST1 == 9 ~ "Refused",
TRUE ~ as.character(PSATEST1)  
))
return(data)
}
df2022clean <- convert_PSATEST1(filtered_PSAdf2022)
df2021clean <- convert_PSATEST1(filtered_PSAdf2021 )
df2020clean <- convert_PSATEST1(filtered_PSAdf2020 )
df2018clean <- convert_PSATEST1(filtered_PSAdf2018 )
View(df2018clean)
View(df2020clean)
View(df2021clean)
View(df2022clean)
convert_PCSTALK1 <- function(data) {
data <- mutate(data, PCSTALK1 = case_when(
PCSTALK1 == 1 ~ "Advantages",
PCSTALK1 == 2 ~ "Disadvantages",
PCSTALK1 == 3 ~ "Both",
PCSTALK1 == 4 ~ "Neither",
PCSTALK1 == 7 ~ "Unsure",
PCSTALK1 == 9 ~ "Refused",
TRUE ~ as.character(PCSTALK1)  
))
return(data)
}
df2022clean <- convert_PCSTALK1(df2022clean)
convert_PCSTALK <- function(data) {
data <- mutate(data, PCSTALK = case_when(
PCSTALK == 1 ~ "Advantages",
PCSTALK == 2 ~ "Disadvantages",
PCSTALK == 3 ~ "Both",
PCSTALK == 4 ~ "Neither",
PCSTALK == 7 ~ "Unsure",
PCSTALK == 9 ~ "Refused",
TRUE ~ as.character(PCSTALK)  
))
return(data)
}
df2021clean <- convert_PCSTALK(df2021clean)
convert_values <- function(data) {
data <- mutate(data,
PCPSAAD3 = case_when(
PCPSAAD3 == 1 ~ "Yes",
PCPSAAD3 == 2 ~ "No",
PCPSAAD3 == 7 ~ "Unsure",
PCPSAAD3 == 9 ~ "Refused",
TRUE ~ as.character(PCPSAAD3)  
),
PCPSADI1 = case_when(
PCPSADI1 == 1 ~ "Yes",
PCPSADI1 == 2 ~ "No",
PCPSADI1 == 7 ~ "Unsure",
PCPSADI1 == 9 ~ "Refused",
TRUE ~ as.character(PCPSADI1)  
))
return(data)
}
df2020clean <- convert_values(df2020clean)
df2018clean <- convert_values(df2018clean)
calculate_frequency <- function(df) {
table(df$PSATEST1)
}
freq_2022 <- calculate_frequency(df2022clean)
freq_2021 <- calculate_frequency(df2021clean)
freq_2020 <- calculate_frequency(df2020clean)
freq_2018 <- calculate_frequency(df2018clean)
frequency_table <- data.frame(
Test_Taken = c("Yes", "No", "Unsure", "Refused"),
`2022` = as.vector(freq_2022),
`2021` = as.vector(freq_2021),
`2020` = as.vector(freq_2020),
`2018` = as.vector(freq_2018)
)
print(frequency_table)
advantage_freq <- sum(df2022clean$PCSTALK1 == "Advantages", na.rm = TRUE)
disadvantage_freq <- sum(df2022clean$PCSTALK1 == "Disadvantages", na.rm = TRUE)
both_freq <- sum(df2022clean$PCSTALK1 == "Both", na.rm = TRUE)
neither_freq <- sum(df2022clean$PCSTALK1 == "Neither", na.rm = TRUE)
advantage_table_2022 <- data.frame(
Year = "2022",
Advantage = advantage_freq,
Disadvantage = disadvantage_freq,
Both = both_freq,
Neither = neither_freq
)
print(advantage_table_2022)
advantage_freq_2021 <- sum(df2021clean$PCSTALK == "Advantages", na.rm = TRUE)
disadvantage_freq_2021 <- sum(df2021clean$PCSTALK == "Disadvantages", na.rm = TRUE)
both_freq_2021 <- sum(df2021clean$PCSTALK == "Both", na.rm = TRUE)
neither_freq_2021 <- sum(df2021clean$PCSTALK == "Neither", na.rm = TRUE)
advantage_table_2021 <- data.frame(
Year = "2021",
Advantage = advantage_freq_2021,
Disadvantage = disadvantage_freq_2021,
Both = both_freq_2021,
Neither = neither_freq_2021
)
print(advantage_table_2021)
advantage_freq_2020 <- sum(df2020clean$PCPSAAD3 == "Yes", na.rm = TRUE)
disadvantage_freq_2020 <- sum(df2020clean$PCPSADI1 == "Yes", na.rm = TRUE)
both_freq_2020 <- sum(df2020clean$PCPSAAD3 == "Yes" & df2020clean$PCPSADI1 == "Yes", na.rm = TRUE)
neither_freq_2020 <- sum(df2020clean$PCPSAAD3 == "No" & df2020clean$PCPSADI1 == "No", na.rm = TRUE)
advantage_table_2020 <- data.frame(
Year = "2020",
Advantage = advantage_freq_2020,
Disadvantage = disadvantage_freq_2020,
Both = both_freq_2020,
Neither = neither_freq_2020
)
print(advantage_table_2020)
advantage_freq_2018 <- sum(df2018clean$PCPSAAD3 == "Yes", na.rm = TRUE)
disadvantage_freq_2018 <- sum(df2018clean$PCPSADI1 == "Yes", na.rm = TRUE)
both_freq_2018 <- sum(df2018clean$PCPSAAD3 == "Yes" & df2018clean$PCPSADI1 == "Yes", na.rm = TRUE)
neither_freq_2018 <- sum(df2018clean$PCPSAAD3 == "No" & df2018clean$PCPSADI1 == "No", na.rm = TRUE)
advantage_table_2018 <- data.frame(
Year = "2018",
Advantage = advantage_freq_2018,
Disadvantage = disadvantage_freq_2018,
Both = both_freq_2018,
Neither = neither_freq_2018
)
print(advantage_table_2018)
combined_table <- rbind(advantage_table_2018, advantage_table_2020, advantage_table_2021, advantage_table_2022)
print(combined_table)
colors <- c('Advantage' = '#f1a104',
'Disadvantage' = '#00743f',
'Both' = '#25b396',
'Neither' = '#192e5b')
interactive_plot <- plot_ly(data = combined_table, x = ~Year) %>%
add_trace(y = ~Advantage, type = 'scatter', mode = 'lines', name = 'Advantage', line = list(color = colors['Advantage'], width = 3)) %>%
add_trace(y = ~Disadvantage, type = 'scatter', mode = 'lines', name = 'Disadvantage', line = list(color = colors['Disadvantage'], width = 3)) %>%
add_trace(y = ~Both, type = 'scatter', mode = 'lines', name = 'Both', line = list(color = colors['Both'], width = 3)) %>%
add_trace(y = ~Neither, type = 'scatter', mode = 'lines', name = 'Neither', line = list(color = colors['Neither'], width = 3)) %>%
layout(title = "Medical Discourse on PSA Tests: An Interactive Visualization",
xaxis = list(title = "Year", tickangle = -45, tickfont = list(size = 12)),
yaxis = list(title = "Count", autorange = TRUE, tickfont = list(size = 12)),
legend = list(title = "Information Told", font = list(size = 12), x = 0.8, y = 1),
hovermode = "closest",
plot_bgcolor = "rgba(0,0,0,0)",
paper_bgcolor = "rgba(0,0,0,0)",
font = list(color = "black"),
showlegend = TRUE)
print(interactive_plot)
View(combined_table)
combined_table <- combined_table %>%
mutate(
ratio_adv_dis = Advantage / Disadvantage,
ratio_adv_both = Advantage / Both,
ratio_adv_nei = Advantage / Neither,
ratio_dis_both = Disadvantage / Both,
ratio_dis_nei = Disadvantage / Neither,
ratio_both_nei = Both / Neither
)
combined_table_ratio <- combined_table %>%
select(ratio_adv_dis, ratio_adv_both, ratio_adv_nei, ratio_dis_both, ratio_both_nei, ratio_dis_nei)
View(combined_table_ratio)
combined_table_ratio <- combined_table_ratio %>%
mutate(Year = c("2018", "2020", "2021", "2022"))
data_long <- tidyr::pivot_longer(combined_table_ratio, cols = -Year, names_to = "Ratio_Type", values_to = "Ratio_Value")
names(combined_table_ratio) <- c("Adv/Dis", "Adv/Both", "Adv/Nei", "Dis/Both", "Both/Nei", "Dis/Nei", "Year")
plot2 <- plot_ly(data = combined_table_ratio, x = ~Year) %>%
add_trace(y = ~`Adv/Dis`, name = 'Advantage/Disadvantage', type = 'scatter', mode = 'lines+markers', line = list(color = '#92c5de'), marker = list(color = '#92c5de', size = 10)) %>%
add_trace(y = ~`Adv/Both`, name = 'Advantage/Both', type = 'scatter', mode = 'lines+markers', line = list(color = '#fdb863'), marker = list(color = '#fdb863', size = 10)) %>%
add_trace(y = ~`Adv/Nei`, name = 'Advantage/Neither', type = 'scatter', mode = 'lines+markers', line = list(color = '#b2abd2'), marker = list(color = '#b2abd2', size = 10)) %>%
add_trace(y = ~`Dis/Both`, name = 'Disadvantage/Both', type = 'scatter', mode = 'lines+markers', line = list(color = '#e66101'), marker = list(color = '#e66101', size = 10)) %>%
add_trace(y = ~`Both/Nei`, name = 'Both/Neither', type = 'scatter', mode = 'lines+markers', line = list(color = '#5e3c99'), marker = list(color = '#5e3c99', size = 10)) %>%
add_trace(y = ~`Dis/Nei`, name = 'Disadvantage/Neither', type = 'scatter', mode = 'lines+markers', line = list(color = '#a6cee3'), marker = list(color = '#a6cee3', size = 10)) %>%
layout(title = "Medical Discourse on PSA Test: Ratios (2018-2022)",
legend = list(title = "Ratio Type", font = list(size = 12)),
xaxis = list(title = "Year"),
yaxis = list(title = "Ratio"))
print(plot2)
filtered_data <- BRFSS2022 %>%
drop_na(TYPCNTR9, X_URBSTAT) %>%
filter(TYPCNTR9 != 77 & TYPCNTR9 != 99)
typcntr9_labels <- c(
"1" = "Female sterilization",
"2" = "Male sterilization",
"3" = "Contraceptive implant",
"4" = "IUD",
"5" = "Shots",
"6" = "Birth control pills, Contraceptive Rings & Patches)",
"7" = "Condoms",
"8" = "Diaphragm, cervical cap, sponge, foam, jelly, film, or cream",
"9" = "Had sex at a time when less likely to get pregnant",
"10" = "Withdrawal",
"11" = "Emergency contraception / morning after pill",
"12" = "Other"
)
urbstat_labels <- c(
"1" = "Urban",
"2" = "Rural"
)
filtered_data$TYPCNTR9 <- factor(filtered_data$TYPCNTR9, labels = typcntr9_labels)
filtered_data$X_URBSTAT <- factor(filtered_data$X_URBSTAT, labels = urbstat_labels)
bircon2022 <- filtered_data %>%
count(X_URBSTAT, TYPCNTR9) %>%
spread(key = TYPCNTR9, value = n, fill = 0)
print("bircon2022:")
print(bircon2022)
install.packages ("forcats")
library(ggplot2)
library(gganimate)
library(forcats)
bircon2022_long <- bircon2022 %>%
pivot_longer(cols = -X_URBSTAT, names_to = "Contraceptive_Method", values_to = "Frequency")
p <- ggplot(bircon2022_long, aes(x = Frequency, y = fct_reorder(Contraceptive_Method, Frequency), color = X_URBSTAT)) +
geom_point(size = 6, alpha = 0.8, shape = 16, show.legend = TRUE) +
scale_color_manual(values = c("Urban" = "#1f78b4", "Rural" = "#33a02c"),
labels = c("Urban", "Rural"),
name = "Location") +
labs(title = "Contraceptive Practices: Urban vs Rural (2022)",
x = "Frequency",
y = NULL) +
theme_minimal() +
theme(plot.title = element_text(size = 18, face = "bold", hjust = 0.5),
axis.text = element_text(size = 12, color = "black"),
axis.title = element_text(size = 14, color = "black"),
legend.position = "bottom",
legend.title = element_text(size = 12),
panel.grid.major = element_line(color = "#e0e0e0"),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
axis.ticks = element_blank(),
plot.background = element_rect(fill = "white"))
animated_plot <- p +
transition_states(fct_reorder(Contraceptive_Method, Frequency), transition_length = 4, state_length = 2) +
shadow_trail(size = 0.5, alpha = 0.1, color = "gray") +
enter_fade() +
enter_grow() +
exit_fade() +
exit_shrink()
animate(animated_plot, width = 800, height = 600, fps = 5, duration = 8)
install.packages("gifski")
install.packages("gifski")
library(gifski)
library(animation)
ani.options("gif" = "gifski")
ggsave(filename = "contraceptives.gif", plot = animated_plot, width = 800, height = 600)
View(BRFSS2018)
brfss2018_selected <- select(BRFSS2018, X_AGEG5YR, HIVRISK5)
brfss2019_selected <- select(BRFSS2019, X_AGEG5YR, HIVRISK5)
brfss2020_selected <- select(BRFSS2020, X_AGEG5YR, HIVRISK5)
brfss2022_selected <- select(BRFSS2022, X_AGEG5YR, HIVRISK5)
View(brfss2018_selected)
hivrisk5_mapping <- c("1" = "Participated", "2" = "Not participated", "7" = "Unsure", "9" = "Refused")
unique_values_2018 <- unique(brfss2018_selected$HIVRISK5)
unique_values_2019 <- unique(brfss2019_selected$HIVRISK5)
brfss2018_selected$HIVRISK5 <- as.character(brfss2018_selected$HIVRISK5)
brfss2019_selected$HIVRISK5 <- as.character(brfss2019_selected$HIVRISK5)
brfss2020_selected$HIVRISK5 <- as.character(brfss2020_selected$HIVRISK5)
brfss2022_selected$HIVRISK5 <- as.character(brfss2022_selected$HIVRISK5)
brfss2018_selected <- brfss2018_selected %>%
mutate(HIVRISK5 = case_when(
HIVRISK5 == "1" ~ "Participated",
HIVRISK5 == "2" ~ "Not participated",
HIVRISK5 == "7" ~ "Don't Know",
HIVRISK5 == "9" ~ "Refused to Answer",
TRUE ~ HIVRISK5
))
brfss2019_selected <- brfss2019_selected %>%
mutate(HIVRISK5 = case_when(
HIVRISK5 == "1" ~ "Participated",
HIVRISK5 == "2" ~ "Not participated",
HIVRISK5 == "7" ~ "Don't Know",
HIVRISK5 == "9" ~ "Refused to Answer",
TRUE ~ HIVRISK5
))
brfss2020_selected <- brfss2020_selected %>%
mutate(HIVRISK5 = case_when(
HIVRISK5 == "1" ~ "Participated",
HIVRISK5 == "2" ~ "Not participated",
HIVRISK5 == "7" ~ "Don't Know",
HIVRISK5 == "9" ~ "Refused to Answer",
TRUE ~ HIVRISK5
))
brfss2022_selected <- brfss2022_selected %>%
mutate(HIVRISK5 = case_when(
HIVRISK5 == "1" ~ "Participated",
HIVRISK5 == "2" ~ "Not participated",
HIVRISK5 == "7" ~ "Don't Know",
HIVRISK5 == "9" ~ "Refused to Answer",
TRUE ~ HIVRISK5
))
unique_values_2018 <- unique(brfss2018_selected$HIVRISK5)
unique_values_2019 <- unique(brfss2019_selected$HIVRISK5)
unique_values_2020 <- unique(brfss2020_selected$HIVRISK5)
unique_values_2022 <- unique(brfss2022_selected$HIVRISK5)
print("Unique values in brfss2018_selected$HIVRISK5:")
print(unique_values_2018)
print("Unique values in brfss2019_selected$HIVRISK5:")
print(unique_values_2019)
print("Unique values in brfss2020_selected$HIVRISK5:")
print(unique_values_2020)
print("Unique values in brfss2022_selected$HIVRISK5:")
print(unique_values_2022)
View(brfss2018_selected)
ageyr_mapping <- c(
"1" = "18 to 24", "2" = "25 to 29", "3" = "30 to 34", "4" = "35 to 39",
"5" = "40 to 44", "6" = "45 to 49", "7" = "50 to 54", "8" = "55 to 59",
"9" = "60 to 64", "10" = "65 to 69", "11" = "70 to 74", "12" = "75 to 79",
"13" = "80 and older", "14" = "Nil"
)
brfss2018_selected <- mutate(brfss2018_selected, X_AGEG5YR = case_when(
X_AGEG5YR %in% names(ageyr_mapping) ~ ageyr_mapping[X_AGEG5YR],
TRUE ~ "Unknown"
))
brfss2019_selected <- mutate(brfss2019_selected, X_AGEG5YR = case_when(
X_AGEG5YR %in% names(ageyr_mapping) ~ ageyr_mapping[X_AGEG5YR],
TRUE ~ "Unknown"
))
brfss2020_selected <- mutate(brfss2020_selected, X_AGEG5YR = case_when(
X_AGEG5YR %in% names(ageyr_mapping) ~ ageyr_mapping[X_AGEG5YR],
TRUE ~ "Unknown"
))
brfss2022_selected <- mutate(brfss2022_selected, X_AGEG5YR = case_when(
X_AGEG5YR %in% names(ageyr_mapping) ~ ageyr_mapping[X_AGEG5YR],
TRUE ~ "Unknown"
))
hivrisk5_mapping <- c("1" = "Participated", "2" = "Not participated", "7" = "Unsure", "9" = "Refused")
participated_counts <- table(brfss2018_selected$X_AGEG5YR[brfss2018_selected$HIVRISK5 == "Participated"])
not_participated_counts <- table(brfss2018_selected$X_AGEG5YR[brfss2018_selected$HIVRISK5 == "Not participated"])
dont_know_counts <- table(brfss2018_selected$X_AGEG5YR[brfss2018_selected$HIVRISK5 == "Don't Know"])
refused_counts <- table(brfss2018_selected$X_AGEG5YR[brfss2018_selected$HIVRISK5 == "Refused to Answer"])
print(participated_counts)
print(not_participated_counts)
print(dont_know_counts)
print(refused_counts)
participated_counts <- table(brfss2018_selected$X_AGEG5YR[brfss2018_selected$HIVRISK5 == "Participated"])
not_participated_counts <- table(brfss2018_selected$X_AGEG5YR[brfss2018_selected$HIVRISK5 == "Not participated"])
dont_know_counts <- table(brfss2018_selected$X_AGEG5YR[brfss2018_selected$HIVRISK5 == "Don't Know"])
refused_counts <- table(brfss2018_selected$X_AGEG5YR[brfss2018_selected$HIVRISK5 == "Refused to Answer"])
frequency_table <- data.frame(
Age_Group = as.character(unique(brfss2018_selected$X_AGEG5YR)),
Participated = participated_counts,
Not_Participated = not_participated_counts,
Don_t_Know = dont_know_counts,
Refused_to_Answer = refused_counts
)
print(frequency_table)
print(frequency_table)
View(frequency_table)
hivdata <- subset(frequency_table, select = -c(Participated.Var1, Not_Participated.Var1,Don_t_Know.Var1, Refused_to_Answer.Var1))
row_indices_order <- c(13, 14, 2, 10, 5, 6, 9, 7, 11, 4, 8, 3,  1, 12)
View(hivdata)
print(hivdata)
print(hivdata)
hivdata_long <- reshape2::melt(hivdata, id.vars = "Age_Group", variable.name = "Response", value.name = "Frequency")
colnames(hivdata) <- c("Age_Group", "Participated", "Not_Participated", "Dont_Know", "Refused_to_Answer")
plot_ly(hivdata, x = ~Age_Group, y = ~Participated, type = "bar", name = "Participated", marker = list(color = "#F8333C", opacity = 0.8)) %>%
add_trace(y = ~Not_Participated, name = "Not Participated", marker = list(color = "#3C896D", opacity = 0.8)) %>%
add_trace(y = ~Dont_Know, name = "Unsure", marker = list(color = "#ef5675", opacity = 0.8)) %>%
add_trace(y = ~Refused_to_Answer, name = "Refused to Answer", marker = list(color = "#ffa600", opacity = 0.8)) %>%
layout(title = "HIV Risk-Behaviors: Age-based Differences (2018-2022)",
xaxis = list(title = "Age Group"),
yaxis = list(title = "Frequency"),
barmode = "stack",
legend = list(title = "Frequency Type"),
plot_bgcolor = "#f7f7f7",
paper_bgcolor = "#f7f7f7",
font = list(color = "#333333")
)
